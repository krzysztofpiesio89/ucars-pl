generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int             @id @default(autoincrement())
  email          String          @unique
  password       String
  name           String?
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  favorites      Favorite[]
  billingDetails BillingDetails?
}

// ZAKTUALIZOWANY MODEL: Dodano pola dla firm i typ konta
model BillingDetails {
  id           Int      @id @default(autoincrement())
  userId       Int      @unique
  accountType  String   @default("INDIVIDUAL") // INDIVIDUAL | BUSINESS
  firstName    String?
  lastName     String?
  companyName  String?  // Nazwa firmy
  taxId        String?  // NIP
  addressLine1 String
  addressLine2 String?
  city         String
  postalCode   String
  country      String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Car {
  id           Int        @id @default(autoincrement())
  stock        String     @unique
  year         Int
  make         String
  model        String
  damageType   String
  mileage      Int?
  engineStatus String
  bidPrice     Float
  buyNowPrice  Float?
  auctionDate  DateTime?
  detailUrl    String
  imageUrl     String
  version      String?
  origin       String?
  vin          String?
  engineInfo   String?
  fuelType     String?
  cylinders    String?
  videoUrl     String?
  is360        Boolean?   @default(false)
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  favorites    Favorite[]
}

model Favorite {
  id        Int      @id @default(autoincrement())
  userId    Int
  carId     Int
  createdAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  car  Car  @relation(fields: [carId], references: [id], onDelete: Cascade)

  @@unique([userId, carId])
}
